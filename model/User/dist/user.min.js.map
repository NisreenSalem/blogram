{"version":3,"sources":["user.js"],"names":["mongoose","require","userSchema","Schema","username","type","String","required","email","role","enum","default","password","lastlogin","Date","now","profilePicture","coverImage","location","gender","profileViewers","Types","ObjectId","ref","blockedUsers","passwordResetToken","passwordResetExpires","accountVerificationToken","timestamps","User","exports","model","module"],"mappings":"aACA,IAAMA,SAAWC,QAAQ,YAInBC,WAAa,IAAIF,SAASG,OAAO,CACnCC,SAAU,CACFC,KAAEC,OACNC,UAAU,GAEdC,MAAO,CACCH,KAAEC,OACNC,UAAU,GAEdE,KAAM,CACEJ,KAAEC,OACNC,UAFE,EAGFG,KAAO,CAAA,OAAQ,SACfC,QAAS,QAEbC,SAAU,CACFP,KAAEC,OACNC,UAAU,GAEdM,UAAW,CACHR,KADGS,KAEPH,QAASG,KAAKC,OAIdV,WADQ,CAERA,KAAAC,OA1B+BK,SAAA,GA6B/BN,aADU,CAEVA,KAAOC,OACPI,KAAA,CAAS,SAAA,SAAA,QA/BsBC,QAAA,UAAAK,eAAA,CAuCnCC,KAAYX,OACJK,QADI,IAvCuBM,WAAA,CA2C9BZ,KAAAC,OACGK,QAAEL,IAGVY,IAAAA,CACQb,KAAEC,QAKNE,SAAO,CAAEH,KAAMC,QAGnBa,wBAAQ,CACAX,MAAEF,CADFD,KAAAC,OAAAK,SAAA,IAKRS,OAAAA,CACUf,KAAEL,OAAmCU,KAAE,CAAA,OAAA,SAAA,sBAG3CL,eAAeF,CAA0B,CAAEE,KAAAL,SAAAG,OAAAkB,MAAAC,SAAAC,IAAA,SAEjDC,UAAY,CACF,CAAExB,KAAAA,SAAAG,OAAsBmB,MAAAA,SAA9BC,IAAA,SApE+BC,aAAA,CAsE9B,CACDnB,KAAAL,SAAAG,OAAAkB,MAAAC,SAAAC,IAAA,SAAwCA,MAAK,CAvEd,CAAAlB,KAAAL,SAAAG,OAAAkB,MAAAC,SAAAC,IAAA,SA0E7BlB,WAAML,CAAmC,CAAEK,KAAAL,SAAAG,OAAAkB,MAAAC,SAAAC,IAAA,SAEjDE,mBACU,CAAEnB,KAAAA,QAEZoB,qBACU,CAAEZ,KAAAA,MAhFuBa,yBAiFnCA,CAAAA,KAAAA,QACMtB,2BAlF6B,CAAAA,KAAAS,OAoF/B,CAGJc,YAAA,IAOEC,KAACC,SAAPC,MAAA,OAAA7B,YAAA8B,OAAOF,QAAUD","file":"user.min.js","sourcesContent":["\r\nconst mongoose = require(\"mongoose\");\r\n\r\n// SCHEMA\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    username: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    role: {\r\n        type: String,\r\n        required: true,\r\n        enum: ['user', 'admin'],\r\n        default: 'user'\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    lastlogin: {\r\n        type: Date,\r\n        default: Date.now(),\r\n\r\n    },\r\n    isVerified: {\r\n        type: String,\r\n        default: false\r\n    },\r\n    accountLevel: {\r\n        type: String,\r\n        enum: ['bronze', 'sliver', 'gold'],\r\n        default: 'bronze',\r\n\r\n\r\n    },\r\n    profilePicture: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    coverImage: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    bio: {\r\n        type: String,\r\n\r\n    },\r\n    location: {\r\n        type: String,\r\n\r\n    },\r\n\r\n    notificationPreferences: {\r\n        email: { type: String, default: true },\r\n\r\n    },\r\n    gender: {\r\n        type: String,\r\n        enum: ['male', 'female', 'prefer not to say']\r\n    },\r\n\r\n    profileViewers: [\r\n        { type: mongoose.Schema.Types.ObjectId, ref: 'User' }\r\n    ],\r\n    followers: [\r\n        { type: mongoose.Schema.Types.ObjectId, ref: 'User' }\r\n    ],\r\n    blockedUsers: [\r\n        { type: mongoose.Schema.Types.ObjectId, ref: 'User' }\r\n    ],\r\n    posts: [\r\n        { type: mongoose.Schema.Types.ObjectId, ref: 'Post' }\r\n    ],\r\n    likedPosts: [\r\n        { type: mongoose.Schema.Types.ObjectId, ref: 'Post' }\r\n    ],\r\n    passwordResetToken:\r\n        { type: String },\r\n\r\n    passwordResetExpires:\r\n        { type: Date },\r\n    accountVerificationToken:\r\n        { type: String },\r\n    accountVerificationExpires:\r\n        { type: Date },\r\n\r\n},\r\n    {\r\n        timestamps: true\r\n    })\r\n\r\n\r\n// COMPILE SCHEMA TO MODEL\r\nconst User = mongoose.model('User', userSchema);\r\nmodule.exports = User;"]}